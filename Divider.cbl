      ******************************************************************
      * Author: VINCENT SENCLAIR
      * Date: 4-18-18
      * Purpose: DIVIDE UNSORTED DATA UNTIL SORTED
      * Tectonics: cobc
      ******************************************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. DIVIDER IS RECURSIVE.
       DATA DIVISION.
       LOCAL-STORAGE SECTION.
      *    VARIABLES USED IN THIS INSTANCE OF DIVIDER
       01 NEW PIC 99.
       01 COUNTER PIC 99 VALUE 1.
       01 THISLSIZE PIC 99.
       01 THISRSIZE PIC 99.
       01 THISFULLSIZE PIC 99.
       01 THISFULLSIZE2 PIC 99.
       01 THISLSIZE2 PIC 99.
       01 THISRSIZE2 PIC 99.

      *    ARRAYS FOR HOLDING LEFT HAND SIDE AND RIGHT HAND SIDE
      *    IN THIS INSTANCE OF DIVIDER
       01 NEWLEFT.
           05 NEWLDATA PIC 99 OCCURS 0 TO 100 TIMES
           DEPENDING ON LSIZE
           INDEXED BY INDX-4.

       01 NEWRIGHT.
           05 NEWRDATA PIC 99 OCCURS 0 TO 100 TIMES
           DEPENDING ON RSIZE
           INDEXED BY INDX-5.

       LINKAGE SECTION.
      *    THE MASTER LIST
       01 MASTER.
           05 MDATA PIC 99 OCCURS 0 TO 100 TIMES
           DEPENDING ON FULLSIZE
           INDEXED BY INDX-1.

      *VARIABLES TAKEN IN WHEN DIVIDER IS CALLED
       01 LSIZE PIC 99.
       01 RSIZE PIC 99.
       01 FULLSIZE PIC 99.

      *    ARRAYS TAKEN IN WHEN DIVIDER IS CALLED
       01 LEFTSIDE.
           05 LDATA PIC 99 OCCURS 0 TO 100 TIMES
           DEPENDING ON LSIZE
           INDEXED BY INDX-2.

       01 RIGHTSIDE.
           05 RDATA PIC 99 OCCURS 0 TO 100 TIMES
           DEPENDING ON RSIZE
           INDEXED BY INDX-3.


       PROCEDURE DIVISION USING MASTER, LEFTSIDE,
       RIGHTSIDE, FULLSIZE, LSIZE, RSIZE.
       MAIN-PROCEDURE.
           DISPLAY "Working in divider"
            SET THISLSIZE TO LSIZE
            SET THISRSIZE TO RSIZE
            SET THISFULLSIZE TO FULLSIZE

      *    IF SIZE IS 0 OR 1 THE ARRAY IS SORTED AND THE PROGRAM CAN MOVE ON
            IF THISFULLSIZE <= 1 THEN

            ELSE
      *    MOVE LEFT HALF OF MASTER ARRAY TO LEFT HAND SIDE ARRAY
               PERFORM UNTIL COUNTER > THISLSIZE
                  SET INDX-2 TO COUNTER
                  SET NEWLDATA(INDX-2) TO MDATA(COUNTER)
                  COMPUTE COUNTER = COUNTER + 1
               END-PERFORM

      *    MOVE RIGHT HALF OF MASTER ARRAY TO RIGHT HAND SIDE ARRAY
               PERFORM UNTIL COUNTER > THISFULLSIZE
                  COMPUTE NEW = COUNTER - LSIZE
                  SET INDX-3 TO NEW
                  SET NEWRDATA(INDX-3) TO MDATA(COUNTER)
                  COMPUTE COUNTER = COUNTER + 1
               END-PERFORM

               SET THISFULLSIZE TO THISLSIZE
               SET THISFULLSIZE2 TO THISRSIZE

      *    CONTINUE DIVIDING LEFT HAND SIDE ARRAY
               COMPUTE THISLSIZE = THISFULLSIZE / 2
               COMPUTE THISRSIZE = THISFULLSIZE - THISLSIZE
               CALL "DIVIDER" USING NEWLEFT, NEWLEFT,
               NEWRIGHT, THISFULLSIZE, THISLSIZE, THISRSIZE

      *    CONTINUE DIVIDING RIGHT HAND SIDE ARRAY
               COMPUTE THISLSIZE2 = THISFULLSIZE2 / 2
               COMPUTE THISRSIZE2 = THISFULLSIZE2 - THISLSIZE2
               CALL "DIVIDER" USING NEWRIGHT, NEWLEFT,
               NEWRIGHT, THISFULLSIZE2, THISLSIZE2, THISRSIZE2

      *    MERGE ELEMENTS
               CALL "MERGER" USING MASTER, NEWLEFT,
               NEWRIGHT, FULLSIZE, LSIZE, RSIZE

            END-IF.

           DISPLAY "Exiting divider" .
       END PROGRAM DIVIDER.
